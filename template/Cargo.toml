# You must change these to your own details.
[package]
name = "my_smithy_app"
description = "My awesome Smithy app!"
version = "0.1.0"
authors = ["You <you@example.com>"]
categories = [
  "wasm",
  "smithy",
  "webassembly"
]
readme = "README.md"
edition = "2018"

[lib]
crate-type = ["cdylib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true

[features]
default = ["wee_alloc"]

[dependencies]
# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator
wee_alloc = { version = "0.4.2", optional = true }

# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = { version = "0.2.48", features = ["nightly", "serde-serialize"] }
smithy = { version="0.0.5", features = [
  "mouse-events",
  "input-events",
] }
web-sys = { version = "0.3.22", features = [
  "console",
  "Element",
  # "Window",
  "Location",
] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.2.45"
futures = "0.1.27"
js-sys = "0.3.22"
wasm-bindgen-futures = "0.3.22"
